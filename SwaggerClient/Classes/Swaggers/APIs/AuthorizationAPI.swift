//
// AuthorizationAPI.swift
//
// Generated by swagger-codegen
// https://github.com/swagger-api/swagger-codegen
//

import Alamofire



public class AuthorizationAPI: APIBase {
    /**
     Generate Access Token
     
     - parameter aPIKey: (header) Your Switch API Key. 
     - parameter signature: (header) Signature parameter is generated as md5(APISecret + ExpireTimestamp) format. 
     - parameter expire: (header) Expire parameter, token&#39;s expire date and time information must be proper to ISO 8601 standarts and Unix Time format with msec information. 
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func tokenGet(aPIKey aPIKey: String, signature: String, expire: Int64, completion: ((data: String?, error: ErrorType?) -> Void)) {
        tokenGetWithRequestBuilder(aPIKey: aPIKey, signature: signature, expire: expire).execute { (response, error) -> Void in
            completion(data: response?.body, error: error);
        }
    }


    /**
     Generate Access Token
     - GET /Token
     - For generating Access Token, you need API Key and API Secret parameters that are provided from the developer portal. At the request, API Key that will be sent by using header is generated as portal API Key and Signature parameter is generated as md5(APISecret + ExpireTimestamp) format. At Expire parameter, token's expire date and time information must be proper to ISO 8601 standarts and Unix Time format with msec information. 
     - examples: [{contentType=application/json, example="aeiou"}]
     
     - parameter aPIKey: (header) Your Switch API Key. 
     - parameter signature: (header) Signature parameter is generated as md5(APISecret + ExpireTimestamp) format. 
     - parameter expire: (header) Expire parameter, token&#39;s expire date and time information must be proper to ISO 8601 standarts and Unix Time format with msec information. 

     - returns: RequestBuilder<String> 
     */
    public class func tokenGetWithRequestBuilder(aPIKey aPIKey: String, signature: String, expire: Int64) -> RequestBuilder<String> {
        let path = "/Token"
        let URLString = SwaggerClientAPI.basePath + path

        let nillableParameters: [String:AnyObject?] = [:]
 
        let parameters = APIHelper.rejectNil(nillableParameters)
 
        let convertedParameters = APIHelper.convertBoolToString(parameters)
        let nillableHeaders: [String: AnyObject?] = [
            "APIKey": aPIKey,
            "Signature": signature,
            "Expire": expire.encodeToJSON()
        ]
        let headerParameters = APIHelper.rejectNilHeaders(nillableHeaders)
 
        let requestBuilder: RequestBuilder<String>.Type = SwaggerClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: URLString, parameters: convertedParameters, isBody: true, headers: headerParameters)
    }

}
