//
// DBOperationsAPI.swift
//
// Generated by swagger-codegen
// https://github.com/swagger-api/swagger-codegen
//

import Alamofire



public class DBOperationsAPI: APIBase {
    /**
     Add is used for adding a data object to the list created at Switch DB.
     
     - parameter aPIKey: (header) Your Switch API Key. 
     - parameter accessToken: (header) Your Access Token. 
     - parameter list: (header) Your data list name. 
     - parameter body: (body) Your new value JSON. 
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func addPost(aPIKey aPIKey: String, accessToken: String, list: String, body: String, completion: ((data: AddResponse?, error: ErrorType?) -> Void)) {
        addPostWithRequestBuilder(aPIKey: aPIKey, accessToken: accessToken, list: list, body: body).execute { (response, error) -> Void in
            completion(data: response?.body, error: error);
        }
    }


    /**
     Add is used for adding a data object to the list created at Switch DB.
     - POST /Add
     - You can choose the list that will be added tha data set to with List parameter that will be sent to Header. It's equal to INSERT query at the relational databases model. The data set that will be added to the database is transmited at request body. For versions upper than v1.2.1, if the data sent is an array, all items in the array are added one by one, so they are added as a whole. 
     - examples: [{contentType=application/json, example={
  "Response" : "aeiou",
  "ListItemId" : "aeiou",
  "ResponseTime" : 123456789
}}]
     
     - parameter aPIKey: (header) Your Switch API Key. 
     - parameter accessToken: (header) Your Access Token. 
     - parameter list: (header) Your data list name. 
     - parameter body: (body) Your new value JSON. 

     - returns: RequestBuilder<AddResponse> 
     */
    public class func addPostWithRequestBuilder(aPIKey aPIKey: String, accessToken: String, list: String, body: String) -> RequestBuilder<AddResponse> {
        let path = "/Add"
        let URLString = SwaggerClientAPI.basePath + path
        let parameters = body.encodeToJSON() as? [String:AnyObject]
 
        let convertedParameters = APIHelper.convertBoolToString(parameters)
        let nillableHeaders: [String: AnyObject?] = [
            "APIKey": aPIKey,
            "AccessToken": accessToken,
            "List": list
        ]
        let headerParameters = APIHelper.rejectNilHeaders(nillableHeaders)
 
        let requestBuilder: RequestBuilder<AddResponse>.Type = SwaggerClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "POST", URLString: URLString, parameters: convertedParameters, isBody: true, headers: headerParameters)
    }

    /**
     It's used for listing a data added before.
     
     - parameter aPIKey: (header) Your Switch API Key. 
     - parameter accessToken: (header) Your Access Token. 
     - parameter list: (header) Your data list name. 
     - parameter body: (body) Your Switch DB Query. 
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func listPost(aPIKey aPIKey: String, accessToken: String, list: String, body: Body, completion: ((error: ErrorType?) -> Void)) {
        listPostWithRequestBuilder(aPIKey: aPIKey, accessToken: accessToken, list: list, body: body).execute { (response, error) -> Void in
            completion(error: error);
        }
    }


    /**
     It's used for listing a data added before.
     - POST /List
     - List parameter sent remarks the list that will be do listing work on at Header. It's equal to SELECT query at relational databases. 
     
     - parameter aPIKey: (header) Your Switch API Key. 
     - parameter accessToken: (header) Your Access Token. 
     - parameter list: (header) Your data list name. 
     - parameter body: (body) Your Switch DB Query. 

     - returns: RequestBuilder<Void> 
     */
    public class func listPostWithRequestBuilder(aPIKey aPIKey: String, accessToken: String, list: String, body: Body) -> RequestBuilder<Void> {
        let path = "/List"
        let URLString = SwaggerClientAPI.basePath + path
        let parameters = body.encodeToJSON() as? [String:AnyObject]
 
        let convertedParameters = APIHelper.convertBoolToString(parameters)
        let nillableHeaders: [String: AnyObject?] = [
            "APIKey": aPIKey,
            "AccessToken": accessToken,
            "List": list
        ]
        let headerParameters = APIHelper.rejectNilHeaders(nillableHeaders)
 
        let requestBuilder: RequestBuilder<Void>.Type = SwaggerClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "POST", URLString: URLString, parameters: convertedParameters, isBody: true, headers: headerParameters)
    }

    /**
     It's used for deleting a data added before at Switch DB.
     
     - parameter aPIKey: (header) Your Switch API Key. 
     - parameter accessToken: (header) Your Access Token. 
     - parameter list: (header) Your data list name. 
     - parameter listItemId: (header) Your list item id. 
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func setDelete(aPIKey aPIKey: String, accessToken: String, list: String, listItemId: String, completion: ((data: SetResponse?, error: ErrorType?) -> Void)) {
        setDeleteWithRequestBuilder(aPIKey: aPIKey, accessToken: accessToken, list: list, listItemId: listItemId).execute { (response, error) -> Void in
            completion(data: response?.body, error: error);
        }
    }


    /**
     It's used for deleting a data added before at Switch DB.
     - DELETE /Set
     - List parameter sent remarks the list that will be deleted data from at Header and ListItemId parameter remarks the ID consisted by Switch DB for the data that will be deleted. It's equal to DELETE query at relational databases. 
     - examples: [{contentType=application/json, example={
  "Response" : "aeiou",
  "ResponseTime" : 123456789
}}]
     
     - parameter aPIKey: (header) Your Switch API Key. 
     - parameter accessToken: (header) Your Access Token. 
     - parameter list: (header) Your data list name. 
     - parameter listItemId: (header) Your list item id. 

     - returns: RequestBuilder<SetResponse> 
     */
    public class func setDeleteWithRequestBuilder(aPIKey aPIKey: String, accessToken: String, list: String, listItemId: String) -> RequestBuilder<SetResponse> {
        let path = "/Set"
        let URLString = SwaggerClientAPI.basePath + path

        let nillableParameters: [String:AnyObject?] = [:]
 
        let parameters = APIHelper.rejectNil(nillableParameters)
 
        let convertedParameters = APIHelper.convertBoolToString(parameters)
        let nillableHeaders: [String: AnyObject?] = [
            "APIKey": aPIKey,
            "AccessToken": accessToken,
            "List": list,
            "ListItemId": listItemId
        ]
        let headerParameters = APIHelper.rejectNilHeaders(nillableHeaders)
 
        let requestBuilder: RequestBuilder<SetResponse>.Type = SwaggerClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "DELETE", URLString: URLString, parameters: convertedParameters, isBody: true, headers: headerParameters)
    }

    /**
     It's used for updating a data object that is already added to Switch DB.
     
     - parameter aPIKey: (header) Your Switch API Key. 
     - parameter accessToken: (header) Your Access Token. 
     - parameter list: (header) Your data list name. 
     - parameter listItemId: (header) Your list item id. 
     - parameter body: (body) Your new value JSON. 
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func setPost(aPIKey aPIKey: String, accessToken: String, list: String, listItemId: String, body: String, completion: ((data: SetResponse?, error: ErrorType?) -> Void)) {
        setPostWithRequestBuilder(aPIKey: aPIKey, accessToken: accessToken, list: list, listItemId: listItemId, body: body).execute { (response, error) -> Void in
            completion(data: response?.body, error: error);
        }
    }


    /**
     It's used for updating a data object that is already added to Switch DB.
     - POST /Set
     - In order to UPDATE a object, Listname and ListItemId parameters should be sent in the Header of the REQUEST as \"List\", \"ListItemId\", respectively, as shown in the example below. It's equal to UPDATE query at relational databases. The data set that will be edited is transmited to the database at request body. 
     - examples: [{contentType=application/json, example={
  "Response" : "aeiou",
  "ResponseTime" : 123456789
}}]
     
     - parameter aPIKey: (header) Your Switch API Key. 
     - parameter accessToken: (header) Your Access Token. 
     - parameter list: (header) Your data list name. 
     - parameter listItemId: (header) Your list item id. 
     - parameter body: (body) Your new value JSON. 

     - returns: RequestBuilder<SetResponse> 
     */
    public class func setPostWithRequestBuilder(aPIKey aPIKey: String, accessToken: String, list: String, listItemId: String, body: String) -> RequestBuilder<SetResponse> {
        let path = "/Set"
        let URLString = SwaggerClientAPI.basePath + path
        let parameters = body.encodeToJSON() as? [String:AnyObject]
 
        let convertedParameters = APIHelper.convertBoolToString(parameters)
        let nillableHeaders: [String: AnyObject?] = [
            "APIKey": aPIKey,
            "AccessToken": accessToken,
            "List": list,
            "ListItemId": listItemId
        ]
        let headerParameters = APIHelper.rejectNilHeaders(nillableHeaders)
 
        let requestBuilder: RequestBuilder<SetResponse>.Type = SwaggerClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "POST", URLString: URLString, parameters: convertedParameters, isBody: true, headers: headerParameters)
    }

}
